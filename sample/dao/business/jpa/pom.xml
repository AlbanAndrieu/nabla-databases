<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>business</artifactId>
		<groupId>com.nabla.project.databases.sample.dao.business</groupId>
		<version>1.0.1-SNAPSHOT</version>
	</parent>
	<groupId>com.nabla.project.databases.sample.dao.business.jpa</groupId>
	<artifactId>jpa</artifactId>
	<packaging>jar</packaging>
	<name>Databases DAO Jpa</name>

	<properties>
		<dao.framework>jpa</dao.framework>
		<database>derby</database>
		<database.name>myDBJpa</database.name>

		<!-- Database settings override to Derby -->
		<dbunit.dataTypeFactoryName>org.dbunit.dataset.datatype.DefaultDataTypeFactory</dbunit.dataTypeFactoryName>
		<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
		<dbunit.schema>APP</dbunit.schema>
		<hibernate.dialect>org.hibernate.dialect.DerbyDialect</hibernate.dialect>
		<jdbc.artifactId>${jdbc.embedded.artifactId}</jdbc.artifactId>
		<jdbc.artifactId>${jdbc.embedded.artifactId}</jdbc.artifactId>
		<jdbc.client.artifactId>derbyclient</jdbc.client.artifactId>
		<jdbc.client.driver>org.apache.derby.jdbc.ClientDriver</jdbc.client.driver>
		<!-- <jdbc.driver> org.apache.derby.jdbc.ClientDriver org.apache.derby.jdbc.EmbeddedDriver org.apache.derby.jdbc.AutoloadedDriver
			</jdbc.driver> -->
		<jdbc.driver>${jdbc.embedded.driver}</jdbc.driver>
		<jdbc.embedded.artifactId>derby</jdbc.embedded.artifactId>
		<jdbc.embedded.driver>org.apache.derby.jdbc.EmbeddedDriver</jdbc.embedded.driver>
		<jdbc.groupId>org.apache.derby</jdbc.groupId>
		<jdbc.password>user</jdbc.password>
		<jdbc.url><![CDATA[jdbc:derby:~/${database.name};create=true]]></jdbc.url>
		<!-- -->
		<jdbc.username>user</jdbc.username>
		<jdbc.version>${jdbc.derby.version}</jdbc.version>
		<maven.test.skip>false</maven.test.skip>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.appfuse</groupId>
			<artifactId>appfuse-${dao.framework}</artifactId>
			<version>${appfuse.version}</version>
		</dependency>

		<!--
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
			<scope>compile</scope>
		</dependency>
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<dependency>
			<groupId>${jdbc.groupId}</groupId>
			<artifactId>${jdbc.artifactId}</artifactId>
			<version>${jdbc.version}</version>
		</dependency>

		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<scope>test</scope>
		</dependency>
		<!--
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<scope>test</scope>
		</dependency>
		 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-mock</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.stephenc.jcip</groupId>
			<artifactId>jcip-annotations</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.appfuse.plugins</groupId>
				<artifactId>appfuse-maven-plugin</artifactId>
				<version>${appfuse.version}</version>
				<dependencies>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.artifactId}</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<genericCore>${amp.genericCore}</genericCore>
					<fullSource>${amp.fullSource}</fullSource>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>create_db</id>
			<build>

				<!-- necessary to enable replacement of property placeholders -->
				<resources>
					<resource>
						<directory>${basedir}/src/main/java</directory>
						<includes>
							<include>**/*.xml</include>
							<include>**/*.properties</include>
						</includes>
						<excludes>
							<exclude>**/web.xml</exclude>
						</excludes>
					</resource>
					<resource>
						<filtering>true</filtering>
						<directory>${basedir}/src/main/resources</directory>
						<includes>
							<include>**/*.xml</include>
							<include>**/*.properties</include>
						</includes>
						<excludes>
							<exclude>applicationContext-resources.xml</exclude>
						</excludes>
					</resource>
				</resources>
				<testResources>
					<testResource>
						<directory>${basedir}/src/test/java</directory>
						<includes>
							<include>**/*Test.java</include>
							<include>**/Test*.java</include>
							<include>**/*TestCase.java</include>
							<include>**/*.xml</include>
							<include>**/*.properties</include>
						</includes>
						<excludes>
							<exclude>**/Abstract*Test.java</exclude>
							<exclude>**/Abstract*TestCase.java</exclude>
						</excludes>
					</testResource>
					<testResource>
						<filtering>true</filtering>
						<directory>${basedir}/src/test/resources</directory>
						<includes>
							<include>**/*.xml</include>
							<include>**/*.properties</include>
						</includes>
					</testResource>
				</testResources>
				<plugins>
					<!-- Hibernate3 plugin -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>hibernate3-maven-plugin</artifactId>
						<version>${hibernate3.maven.plugin.version}</version>
						<executions>
							<execution>
								<phase>process-test-resources</phase>
								<goals>
									<goal>hbm2ddl</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<components>
								<component>
									<name>hbm2ddl</name>
									<!--<implementation>jpaconfiguration</implementation> -->
									<!--<implementation>jdbcconfiguration</implementation> -->
									<!--<implementation>annotationconfiguration</implementation> -->
								</component>
							</components>
							<componentProperties>
								<drop>true</drop>
								<jdk5>true</jdk5>
								<!--<console>false</console> -->
								<configurationfile>${target.dir}/classes/hibernate.cfg.xml</configurationfile>
								<propertyfile>${target.dir}/classes/jdbc.properties</propertyfile>
								<!--<propertyfile>src/test/resources/jdbc.properties</propertyfile> -->
								<!--<persistenceunit>jpa</persistenceunit> -->
								<outputfilename>create-schema.sql</outputfilename>
							</componentProperties>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>${maven.test.skip}</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
		</profile>
		<profile>
			<id>dbunit_import</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dbunit-maven-plugin</artifactId>
						<version>${maven.dbunit.plugin.version}</version>
						<executions>
							<execution>
								<id>test-compile</id>
								<phase>test-compile</phase>
								<goals>
									<goal>operation</goal>
								</goals>
								<!-- specific configurations -->
								<configuration>
									<!--<type>CLEAN_INSERT</type> -->
									<type>${dbunit.operation.type}</type>
									<!--<src>${basedir}/src/test/resources/hibernate/${database}/import-data.xml</src> -->
									<src>${basedir}/src/test/resources/import-data.xml</src>
								</configuration>
							</execution>
							<!-- Runs before integration tests and jetty:run-war -->
							<!-- <execution> <id>test</id> <phase>test</phase> <goals> <goal>operation</goal> </goals> </execution> -->
						</executions>
						<dependencies>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.embedded.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<dataTypeFactoryName>${dbunit.dataTypeFactoryName}</dataTypeFactoryName>
							<driver>${jdbc.driver}</driver>
							<username>${jdbc.username}</username>
							<password>${jdbc.password}</password>
							<url>${jdbc.url}</url>
							<schema>${dbunit.schema}</schema>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>${maven.test.skip}</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
		</profile>
		<profile>
			<id>dbunit_export</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dbunit-maven-plugin</artifactId>
						<version>${maven.dbunit.plugin.version}</version>
						<executions>
							<!-- insert data before test -->
							<!-- <execution> <id>test-compile</id> <phase>test-compile</phase> <goals> <goal>operation</goal> </goals> <configuration>
								<type>${dbunit.operation.type}</type> <src>src/test/data/insert.xml</src> </configuration> </execution> -->
							<!-- export data after test -->
							<execution>
								<phase>test</phase>
								<goals>
									<goal>export</goal>
								</goals>
								<!-- specific configurations -->
								<configuration>
									<format>xml</format>
									<!-- <src>${basedir}/src/test/resources/hibernate/${database}/export-data.xml</src> -->
									<src>${basedir}/src/test/resources/export-data.xml</src>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.embedded.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<dataTypeFactoryName>${dbunit.dataTypeFactoryName}</dataTypeFactoryName>
							<driver>${jdbc.driver}</driver>
							<username>${jdbc.username}</username>
							<password>${jdbc.password}</password>
							<url>${jdbc.url}</url>
							<!-- <type>${dbunit.operation.type}</type> -->
							<schema>${dbunit.schema}</schema>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
		</profile>
		<profile>
			<id>jpa-resource</id>
			<activation>
				<property>
					<name>!profile.activation</name>
				</property>
			</activation>
			<build>
				<!-- necessary to enable replacement of property placeholders -->
				<resources>
					<resource>
						<directory>${basedir}/src/main/java</directory>
						<includes>
							<include>**/*.xml</include>
							<include>**/*.properties</include>
						</includes>
						<excludes>
							<exclude>**/web.xml</exclude>
						</excludes>
					</resource>
					<resource>
						<!--
						<excludes>
							<exclude>applicationContext-resources.xml</exclude>
						</excludes>
						 -->
						<filtering>true</filtering>
						<directory>${basedir}/src/main/resources</directory>
						<includes>
							<include>**/*.xml</include>
							<include>**/*.properties</include>
						</includes>
					</resource>

					<!--
					<resource>
						<directory>${basedir}/src/main/resources</directory>
						<includes>
							<include>applicationContext-resources.xml</include>
						</includes>
						<filtering>false</filtering>
					</resource>
					-->
				</resources>
				<testResources>
					<testResource>
						<directory>${basedir}/src/test/java</directory>
						<includes>
							<include>**/*Test.java</include>
							<include>**/Test*.java</include>
							<include>**/*TestCase.java</include>
							<include>**/*.xml</include>
							<include>**/*.properties</include>
						</includes>
						<excludes>
							<exclude>**/Abstract*Test.java</exclude>
							<exclude>**/Abstract*TestCase.java</exclude>
						</excludes>
					</testResource>
					<testResource>
						<filtering>true</filtering>
						<directory>${basedir}/src/test/resources</directory>
						<includes>
							<include>**/*.xml</include>
							<include>**/*.properties</include>
						</includes>
					</testResource>
				</testResources>
			</build>
		</profile>
	</profiles>

</project>
